<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Elda Standalone</title>

<link rel="stylesheet" href="/standalone/lda-assets/css/vm.css" />

<script type="text/javascript" src="/standalone/lda-assets/scripts/jquery.min.js"> </script>
<script type="text/javascript" src="/standalone/lda-assets/scripts/jquery-ui.min.js"> </script>
<script src="/standalone/lda-assets/scripts/codemirror/codemirror_min.js" type="text/javascript"> </script>
<link href="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet" />

<script type="text/javascript">

$(function() {
	$('textarea').each(function() {
		var cm = CodeMirror.fromTextArea(this, 
			{
			basefiles: ["/standalone/lda-assets/scripts/codemirror/codemirror_base_sparql.js"],
			stylesheet: "/standalone/lda-assets/css/sparql.css",
			textWrapping: false
			})
		$(cm.frame)
			.css('border', '1px solid #D3D3D3')
			.css('border-radius', '5px')
			.css('-moz-border-radius', '5px')
	})
})

</script>	

<style>
    div[id="OpenLayers.Control.Attribution_2"] {right: 0; bottom: 0}
</style>

<style>
div.mapInfo {
    font-size: smaller
}

.hidden {
	display: none
}

</style>

<script type="text/javascript">

var icon_reduced_size = "$_icon_reduced_size"
var icon_full_size = "$_icon_full_size"

function clickView(id_count) {
	var id = "view-" + id_count
	var toggle_id = "view-toggle-icon-" + id_count
	var v = document.getElementById(id)
	var t = document.getElementById(toggle_id)
	v.className = (v.className == "" ? "hidden" : "")
	t.src = (v.className == "" ? icon_full_size : icon_reduced_size) 
}

</script>

#if ($map_datasize > 0) 

    <script src="${resourceRoot}/openlayers/OpenLayers.js"></script>
    
    <script src="http://www.openstreetmap.org/openlayers/OpenStreetMap.js"></script>
    
    <script type="text/javascript">
    
        function map_init() {
              
            var useMapQuest = false;
            var useMapnik = !useMapQuest;
            
            var controls = [
                new OpenLayers.Control.Attribution(),
                new OpenLayers.Control.Navigation(),
                new OpenLayers.Control.PanPanel(),
                new OpenLayers.Control.ZoomPanel()
                ]
    
            var map = new OpenLayers.Map("map" , {controls: controls});
    
            #set ($d = "$") ## BAH HUMBUG
            var arrayOSM = [
                "http://otile1.mqcdn.com/tiles/1.0.0/map/${d}{z}/${d}{x}/${d}{y}.jpg",
                "http://otile2.mqcdn.com/tiles/1.0.0/map/${d}{z}/${d}{x}/${d}{y}.jpg",
                "http://otile3.mqcdn.com/tiles/1.0.0/map/${d}{z}/${d}{x}/${d}{y}.jpg",
                "http://otile4.mqcdn.com/tiles/1.0.0/map/${d}{z}/${d}{x}/${d}{y}.jpg"
                ];
                    
            wgs84 = new OpenLayers.Projection("EPSG:4326");
            
            if (useMapQuest) map.addLayer(new OpenLayers.Layer.OSM("MapQuest-OSM Tiles", arrayOSM));
            if (useMapnik) map.addLayer(new OpenLayers.Layer.OSM.Mapnik());
    
            // ==============================================================================
    
            var raw_bounds = new OpenLayers.Bounds()
                    
            var datapoints = $datapoints
            var data = []
            for (var i = 0; i < datapoints.length; i += 1)
                data.push([datapoints[i][0], datapoints[i][1]])
            
            var old_test_data = [
                [-0.10611, 51.43420]
                , [0.10611, 51.43420]
                , [-0.09888, 51.45471]
                , [-0.08199, 51.45478]
                , [-0.08520, 51.43420]
                , [-0.09728, 51.47514]
                , [-0.10611, 51.49698]
                , [-0.06789, 51.50045]
                , [-0.05631, 51.47074]
                , [-0.10337, 51.50150]
                , [-0.07209, 51.44968]
                ]
    
            for (var i = 0; i < data.length; i += 1) {
                var di = data[i]
                var d = new OpenLayers.LonLat(di[0], di[1]) 
                raw_bounds.extend(d)
            }
    
            var bounds = raw_bounds.transform(wgs84,map.getProjectionObject());
            var zoom = map.getZoomForExtent(bounds)
    
            var center = bounds.getCenterLonLat() // .transform(wgs84,map.getProjectionObject())
    
            map.setCenter(center, zoom < 14 ? zoom : 14 )
    
            var markers = new OpenLayers.Layer.Markers("Markers")
            map.addLayer(markers);
    
            var size = new OpenLayers.Size(32,32);
            var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
            var icon = new OpenLayers.Icon("${resourceRoot}/openlayers/img/marker.png", size, offset);
    
            for (var i = 0; i < data.length; i += 1) {
                var di = data[i]
                var pos = new OpenLayers.LonLat(di[0], di[1]).transform(wgs84,map.getProjectionObject())
                var marker = new OpenLayers.Marker(pos, icon.clone())
                addMouseEvents( marker, datapoints[i][3], "<div class='mapInfo'> " + datapoints[i][2] + " </div>" )
                markers.addMarker(marker)
            }
        }
        
        function addMouseEvents( marker, id, message ) {
            marker.events.on({
            
                    click: function () {
                            window.location = "#" + id
                    },
                    
                    mouseover: function () {
                                var info = document.getElementById("mapInfo")
                                info.innerHTML = message
                            }
                    })
        }
    
    </script>
#end

	
</head>
