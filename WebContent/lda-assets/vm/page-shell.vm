## 
## This Velocity template renders the Elda result model in a way inspired
## by the XSLT's HTML rendering but is deliberately not the same. Cycles in
## the graph are handled by the template code rather than a pre-pass as
## in the XML renderer. Property (chains) are added to the view by clicking
## on an associated "+" icon; active views can be dropped by clicking on
## the "viewing properties" scissors-icon. Viewed resources can be clicked
## on to open up a new Elda URI with that resource as the selected item,
## allowing the user to explore the dataset without the items all belonging
## to the Elda base URI.
##
## These templates are limited examples, not complete rendering solutions;
## one reason for providing the Velocity renderer is for developers to be
## able to build renderers to their taste without having to rejig the
## XSLT templates.
##

#set ($seen = $utils.newSet())
#set ($nextlink = $thisPage.valueOf("xhv:next"))
#set ($prevlink = $thisPage.valueOf("xhv:prev"))
#set ($firstlink = $thisPage.valueOf("xhv:first"))
#set ($resourceRoot = $vars['_resourceRoot'])
#set ($rootPath = $vars['_rootPath'])

#set ($_page = $vars['_page'].shortForm().raw())
#set ($_view = $vars['_view'].shortForm().raw())

#set ($_icon_reduced_size = "$resourceRoot/images/green/16x16/Reduced Size.png")
#set ($_icon_full_size = "$resourceRoot/images/green/16x16/Full Size.png")

#set ($propertyPaths = $utils.newSet())

#macro (image,$name)
<img src="${resourceRoot}images/green/16x16/${name}.png" />
#end

#macro (grey_image,$name)
<img src="${resourceRoot}images/grey/16x16/${name}.png" />
#end

##
## cut the _properties variable (which has the value of the _properties
## query parameter) at commas and put the results into the set
## $_properties.
##

#set ($_properties = $utils.newSet())
#foreach ($p in $vars['_properties'].toString().split(","))
    #if ($p.isEmpty()) #else 
        #set ($ignored = $_properties.add($p))
    #end
#end

##
## Scan the items for lat/long properties. Assemble same into a list,
## and set datapoints and map_datasize so that if there are entries, a
## map is generated. The array elements include the item label (for
## presentation) and id (for linking).
##

#set ($data = $utils.newList())
#set ($q = '"')

#foreach ($item in $items)
    #set ($lat = $item.valueOf("geo:lat"))
    #set ($long = $item.valueOf("geo:long"))

    #if ($lat && $long) #set ($ignored = $data.add("[$long, $lat, ${q}${item.label}${q}, ${q}${item.id}${q}]")) #end
#end

#set ($map_datasize = $data.size())
#set ($datapoints = "[" + $utils.join($data, ", ") + "]")

<html>
#parse("page-head-shell.vm")
<body onload="map_init()">

##
## The top div has the logos (RDF, Epimorphics) and title text, each of
## which is linked to a suitable target.
##

<div style="background: #dff; font-size: 2em; margin: 0.5ex; border-radius: 0.2ex">
	<a href="http://en.wikipedia.org/wiki/Resource_Description_Framework">
		<img style="margin: 0.5ex; float: left" src="$resourceRoot/images/molecule-transparent.png">
	</a>
	<a href="https://code.google.com/p/elda/">
		<div style="float: left; margin-top: 0.5ex">Elda</div>
	</a>
	<a href="https://code.google.com/p/elda/downloads/list">
		<div style="text-indent: 0.5ex; float: left; margin-top: 0.5ex">Standalone: </div>
	</a>
	<a href="http://code.google.com/p/linked-data-api/wiki/Specification">
		<div style="text-indent: 1ex; float: left; margin-top: 0.5ex">Linked Data API</div>
	</a>
	<a href="http://www.epimorphics.com/web/">
		<img style="float: right; margin-right: 1ex" src="http://elda.googlecode.com/hg/docs/epilogo-200.png">
	</a>
	<div style="clear: both"> </div>
</div>

##
## Create a pipe-separated list of format names, linked with a URL
## which is this page but rendered in that format.
##

<div class="formats-list">
	#set ($pipe = "")
	#foreach ($f in $formats)
		$pipe #set ($pipe = " | ") <a href="$f.link">$f.name</a>
	#end			
</div>

##
## display of literals, with their language codes if they have one,
## and their types unless they are 'self-quoting', and links to this
## page but with filters set to have property values less/lesseq/
## greater/greatereq/equals than this page.
##

#macro (tag, $property, $value)
	"Select items with $property.shortForm() less than $value"
#end

#macro (selection, $prefix, $symbol, $wording, $property, $value)					
	<a
		title="Select items with $property $wording $value"
		href="$thisPage.change($prefix, $property, $value.toString()).getURI()"
	> 
		$symbol 
	</a>
#end

#macro (showliteral,$preamble,$property,$value)
	<div style="float: left"> $preamble </div>
	<div style="float: left; margin-left: 1ex">
		#if ($value.isSelfQuoting()) 
			<span title="$value.literalType">$value</span> 
		#else 
			"$value.shortForm()"
			#set ($lang = $value.language) 
			#set ($type = $value.literalType)
			#if ($lang == "") #else @$lang #end 
			#if ($type == "") #else ^^$type #end 
		#end 
	</div> 
	<div style="float: right">
	#selection("maxEx-", "&lt;", "less than", $property, $value)
	#selection("max-", "<u>&lt;</u>", "less or equal to", $property, $value)
	#selection("", "=", "equal to", $property, $value)
	#selection("min-", "<u>&gt;</u>", "greater or equal to", $property, $value)
	#selection("minEx-", "&gt;", "greater than", $property, $value)
	</div>
	<div style="clear: both"> </div>
#end

##
## Two links for some resource value; the first is a link directly to
## that value's URI and the second launches a new /about link with
## _properties set to "*.*.*" as a reasonable properties view.
##

#macro(linkly,$value)
<span>
<a class="bold" href="$value.URI" id="$value.id"
	title="Click to see document for this resource."
>#image("Document")
</a></span>

<span>
#set ($macro.A = $utils.newSet())
#set ($ignored = $macro.A.addAll($_properties))
#set ($ignored = $macro.A.add("*.*.*"))
#set ($macro.uri = $rootPath + "/about.vhtml")
#set ($macro.base = $thisPage.wrap($macro.uri))
#set ($macro.changeProperties = $macro.base.change('', '_properties', $utils.join($macro.A,',') ))
#set ($macro.changeAll = $macro.changeProperties.change('','resource', $value.URI.quotedURI()))           

<a href="$macro.changeAll.URI"
	title="Click to see properties of this resource."
>$value.label</a>
</span>
#end


## 
## display the values of $item (initially one of the selected items). This
## macro is recursive, hence the heavy use of $macro.* and $foreach.*
## (clumsy but at least Velocity makes it /possible/). Properties with a
## single value are special-cased so that the value is on the same line
## as the property. Properties get two links: one for the "document" of
## the property, and the other (marked "+") to add its chain to the 
## set of marked property chains. Items that are in the 'seen' set have
## been handled high up the value tree and so their properties are not shown.
## 

#macro(displayvalues,$chain,$item,$seen)
	#set ($macro.unseen = $seen.add($item))
	#if ($macro.unseen)
		#foreach ($property in $item.properties)

			#set ($foreach.shortProp = $property.shortForm())
			#set ($foreach.dottedChain = $chain + "." + $foreach.shortProp)
			#set ($foreach.values = ${item.getValues($property)})	
            #set ($macro.dottedName = $foreach.dottedChain.substring(1))		
			#set ($foreach.firstValue = $foreach.values.get(0))
			
			#set ($A = $utils.newSet())
			#set ($ignored = $A.addAll($_properties))
			
		## ==========================================
			
			#set ($foreach.wasAbsent = $A.add($foreach.dottedChain.substring(1)))
			
			#if ($foreach.wasAbsent) 
				
				#set ($foreach.changeResult = $thisPage.change('', '_properties', $utils.join($A,',') ))
						    
			    #set ($image = "<img src='" + $resourceRoot + "images/green/16x16/" + "Plus" + ".png" + "'>")
			    
				#set ($foreach.linkprop = 
					" <a title='Click to add this property chain to viewed properties.' href='" + $foreach.changeResult.URI + "'>" + $image + "</a>"
					+ " <a style='margin-left: 1ex' href='" + $property.URI + "'>" 
					+ $property.shortForm() 
					+ "</a>"
					)
	            
	            #set ($ignored = $propertyPaths.add($foreach.dottedChain.substring(1)))

			#else 
			
				#set ($ignored = $A.remove($foreach.dottedChain.substring(1)))
				
				#set ($foreach.changeResult = $thisPage.change('', '_properties', $utils.join($A,',') ))
			    
			    #set ($image = "<img src='" + $resourceRoot + "images/green/16x16/" + "Cancel" + ".png" + "'>")
				
				#set ($foreach.linkprop = 
					" <a title='Click to remove this property chain from viewed properties.' href='" + $foreach.changeResult.URI + "'>" + $image + "</a>"
					+ " <a style='margin-left: 1ex' href='" + $property.URI + "'>" 
					+ $property.shortForm() 
					+ "</a>"
					)
					
	            #set ($ignored = $propertyPaths.add($foreach.dottedChain.substring(1)))
            #end
            
        ## ===============================================
            
            
			#if ($foreach.values.size() == 1 && $property.shortForm() == "label") #else
			
				<hr class="hr-style">
					
				#if ($foreach.values.size() == 1 && $foreach.firstValue.isLiteral())
					#showliteral($foreach.linkprop,$macro.dottedName,$foreach.firstValue)
				#elseif ($foreach.values.size() == 1 && ($seen.contains($foreach.firstValue) || $foreach.firstValue.properties.size() == 0))
					$foreach.linkprop #linkly($foreach.firstValue)
										
					#set ($target = $thisPage.change('', $macro.dottedName, $foreach.firstValue.shortForm().raw()))
										
                    <a
                        style="float: right; clear: right"
                        title="Select items with $macro.dottedName equal to $foreach.firstValue.shortForm()"
                        href="$target.URI"
                    > 
                        =                        
                    </a>
                    
				#else				
					$foreach.linkprop
					#foreach ($value in $foreach.values)			   
						<div class="indented">
							#if ($value.isLiteral())
								#showliteral("", $macro.dottedName,$value)
							#else
								#if ($value.properties.size() > 0 && !$seen.contains($value))
									<div class="nested-item">
										<span style="background: #dff; width: 100%"> #linkly($value) </span>
										#displayvalues($foreach.parent.dottedChain,$value,$seen)
									</div>
								#else
									#linkly($value)
								#end
							#end				
						</div>					
					#end
				#end
			#end
		#end
	#else
	#end
	#if ($macro.unseen) #set ($ignored = $seen.remove($item)) #end
#end

##
## Using tables for layout, we might be able to do away with this now
## Left column is for search results, right column for tweaking the view.
## Under the search results there's a list of local links to the selected
## items, unless there is but one, and then an "item box" for each selected
## item which displays the item and invokes 'displayvalues' to show its
## properties.
##

<table width="100%">
<tr>
<td width="70%" valign="top">

#macro(firstAndPrevLinks)
    #if ($firstlink)
        #if ($firstlink.equals($thisPage)) #else
            <a class="buttonlike" href="$firstlink.URI">first</a>
        #end 
    #end
    
    #if ($prevlink)
        <a class="buttonlike" href="$prevlink.URI">prev</a> 
    #end
#end

#macro(nextLink)
    #if ($nextlink) 
        <a class="buttonlike" href="$nextlink.URI">next</a> 
    #end
#end    

#macro(pageSize,$n)
    <a class="buttonlike"
        style="margin-left: 1px"
        href="$thisPage.change('', '_pageSize', $n).URI"
    >
        $n
    </a>
#end

#macro(localAndExternalLinks)
    <div style="margin-left: 4ex; margin-right: 4ex">
    #if ($items.size() > 1)
        #firstAndPrevLinks()        
        <b>
          on this page 
          #if ($_page.equals("") || $_page.equals("0")) #else ($_page) #end
        </b>
        #set ($pipe = "")
        #foreach ($item in $items)
            <span>
                $pipe #set($pipe = " | ") <a href="#$item.id">$item.label</a>
            </span>
        #end
        #nextLink()
        
        <b>page size</b>
        #pageSize("10")
        #pageSize("25")
        #pageSize("50")
    #end
    </div>
#end

<div id="search-results">
	<h2>Search Results</h2>
	
	#localAndExternalLinks()
		
	##
	## display the items and their properties.
	##
	<div style="margin-left: 3ex">
		#foreach ($item in $items) 
			<div class="itembox">
			#linkly($item)
			#displayvalues("",$item, $seen)
			</div>
		#end
	</div>	
	
    #localAndExternalLinks()
	
</div>

</td>

##
## Show all the properties in _properties with a constructed link that
## is this page but with that property removed from the _properties
## query parameter's comma-separated value.
##

#set ($id_counter = 1000)

#macro(showView,$v)
    #set ($id_counter = $id_counter + 1)
    #if ($v.properties.size() == 0)
    	#grey_image("Player Stop")
    #else
		<img 
			id="view-toggle-icon-$id_counter"
			src="$resourceRoot/images/green/16x16/Reduced Size.png" 
			onClick='return clickView("$id_counter")'
			title="Click to show/reveal properties of this view."  
		/>
	#end
    $v.name
    <div id="view-$id_counter" class="hidden" style="margin-left: 1ex; font-size: smaller; font-style: italic">
    #foreach ($chain in $v.properties) 
        <div>
			#set ($A = $utils.newSet())
			#set ($ignored = $A.addAll($_properties))
			#set ($ignored = $A.add($chain))
        	#set ($changeResult = $thisPage.change('', '_properties', $utils.join($A,',') ))
        	#set ($image = "<img src='" + $resourceRoot + "images/green/16x16/" + "Plus" + ".png" + "'>")
		    
        	<a href="$changeResult.URI"> $image </a> $chain
        </div> 
    #end
    </div>
#end

<td width="30%" valign="top">
	<h2>viewing</h2>
	
	<div style="margin-left: 2ex">

		##
		## If there are datapoints, there is a map.
		##
		
        #if ($map_datasize > 0)	
        	<div class="viewing-header"> locations </div>
       	    <div style="margin-left: 1em">
           	    <div id="mapInfo" class="mapInfo"> &nbsp; </div>
           	    <div style="clear: both"> </div>
           	    
       	        <div style="border: 1ex solid #ddd; border-radius: 1ex; width: 256px; height: 256px" id="map"></div>
       	    
           	    <div style="font-size: smaller; width: 256px" align="right">
           	        tiles courtesy of <a href="http://www.mapquest.com/">MapQuest</a> 
           	        <img src="http://developer.mapquest.com/content/osm/mq_logo.png">
           	    </div>
           	    
       	    </div>
   	    #end
   	    
   	    ##
   	    ## If there are filters, display them and offer the opportunity
   	    ## to snip them away.
   	    ##
   	    
   	    #if ($filters.size() > 0) 
   	    	<div class="viewing-header"> filters </div>
            <div style="margin-left: 1em"> 
	    		#foreach ($filters_p in $filters.keySet())
	    			#set ($changed = $thisPage.change('', $filters_p, ""))
	    			<div>
		    			<a href="$changed.URI" title="Click to remove this filter.">
		    				#image("Cancel")
		    			</a>
		    			#set ($value = $filters.get($filters_p))
		    			#set ($param = $utils.cutParam($filters_p))
		    			$param.property $param.op $value
	    			</div>
	    		#end
	    	</div>
    	#end
    	
    	##
    	## If there are any _properties, display them and offer the option
    	## to snip them away.
    	##
    
        <div class="viewing-header"> 
            properties 
            <span style="float: right; clear: right; margin-right: 6px">
                #set ($A = $utils.newSet())
                #set ($ignored = $A.addAll($_properties))
                #set ($ignored = $A.add("*"))
                #set ($star = $thisPage.change('', '_properties', $utils.join($A,',')))
                <a href="$star.URI" title="Click to add a wildcard property to the properties."> 
                    #image("Star") 
                </a>
            </span>
        </div>
        
        #foreach ($p in $_properties)
            <div style="margin-left: 1em"> 
            
            #set ($A = $utils.newSet())
            #set ($ignored = $A.addAll($_properties))
            #set ($ignored = $A.remove($p))
            #set ($cancelled = $thisPage.change('', '_properties', $utils.join($A,',')))
            
            #set ($A = $utils.newSet())
            #set ($p_starred = $p + ".*")
            
            #set ($ignored = $A.addAll($_properties))
            #set ($ignored = $A.remove($p))
            #set ($ignored = $A.add($p_starred))
            
            #set ($extended = $thisPage.change('', '_properties', $utils.join($A,',')))
                        
            <a title='Click to remove this property chain from viewed properties.' href="$cancelled.URI">
                #image("Cancel")
            </a> 
            
            #if ($p.endsWith(".*"))
            
                #set ($A = $utils.newSet())
                #set ($p_unstarred = $utils.allButLast(2, $p))
            
                #set ($ignored = $A.addAll($_properties))
                #set ($ignored = $A.remove($p))
                #set ($ignored = $A.add($p_unstarred))
            
                #set ($reduced = $thisPage.change('', '_properties', $utils.join($A,',')))
                
                <a title='Click to remove the rightmost ".*".' href="$reduced.URI">
                    #image("Full Size")
                </a>
            #else
                #grey_image("Player Stop")
            #end
            
            <a title='Click to extend this property with ".*".' href="$extended.URI">
                #image("Star")
            </a>
            
            $p
            
            </div>
        #end
    	
    	##
    	## Display the available views. Allow one of them them to become the
    	## current view. Can toggle the view's properties open and that
    	## allows them to be selected into _properties.
    	##
    	
        <div class="viewing-header"> views </div>
        
        #foreach ($v in $views)
            #if ($v.name == $_view)
                #set ($l = $thisPage.change('', '_view', ""))
                <div style="margin-left: 1em"> 
                    <a href="$l.URI">#image("Cancel")</a> 
                    #showView($v)
                </div>
            #else
                #set ($l = $thisPage.change('', '_view', "$v.name"))
                <div style="margin-left: 1em"> 
                    <a href="$l.URI">#image("Plus")</a> 
                    #showView($v)
                </div>
            #end    
        #end
    	
	</div>
	
</td>
</tr>
</table>
	
<hr class="hr-style">

##
## Show the SPARQL query that generates the selected item (unless this
## is an item endpoint) and the SPARQL query that gets the view properties
## (but that doesn't show the explicit property chains nor the label
## query, alas).
##

<table id="queries" style="margin: 2ex" width="100%">
<tr>

#if ($isListEndpoint)
	<td width="50%">
	<h4>selection query</h4>
	
	<p>
	This is the SPARQL query that was issued to select the items
	of interest for this page.
	</p>
	
	<textarea class="provenance" name="query" width="45%">
	$meta['selectionResult.query.value']
	</textarea>
	</td>
#end

<td width="50%">
<h4>view query</h4>

<p>
This is the SPARQL query that was issued for the property
chains of the view for this page.
</p>

<textarea class="provenance" name="query" width="45%">
$meta['viewingResult.query.value']
</textarea>
</td>

</tr>
</table>


#parse("page-foot-shell.vm")

</body>
</html>
